# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Environment variables (CRITICAL - Never commit!)
.env
.env.*
!.env.example
!.env.production.example
.env.local
.env.development.local
.env.test.local
.env.production.local

# API Keys and Secrets (CRITICAL!)
*.key
*.pem
*.p12
*.pfx
secrets/
config/secrets.js
config/keys.js

# Build outputs
dist/
build/
out/
*.tgz
*.tar.gz

# IDE and Editor files
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.idea/
*.swp
*.swo
*~
.project
.classpath
.settings/
*.sublime-project
*.sublime-workspace

# OS files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov
.nyc_output/

# MongoDB data
data/
db/
database/
*.db

# Docker
.dockerignore
docker-compose.override.yml

# Temporary files
tmp/
temp/
.tmp/
.cache/

# Package manager lock files (choose one approach)
# Option 1: Keep lock files (recommended)
# package-lock.json
# yarn.lock
# pnpm-lock.yaml

# Option 2: Ignore lock files (if team uses different managers)
# Uncomment below if needed:
# package-lock.json
# yarn.lock
# pnpm-lock.yaml

# Deployment specific
.vercel
.netlify
.firebase

# Testing
.coverage/
test-results/
playwright-report/
test-output/

# Next.js (if applicable)
.next/
next-env.d.ts

# Vite
vite.config.js.timestamp-*

# Local development
.local
.dev

# Backup files
*.bak
*.backup
*.old
*.orig

# System files
*.swp
*.swo
.DS_Store?
._*

# Security scans
.snyk

# Miscellaneous
*.tsbuildinfo
.eslintcache
.stylelintcache
